name: Deploy and Run Selenium Tests on Edge (Headless Mode)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 11 (for Java)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Step 3: Install Microsoft Edge and EdgeDriver
      - name: Install Microsoft Edge and EdgeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip

          # Install Microsoft Edge browser
          sudo apt-get install -y software-properties-common
          wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable
          microsoft-edge --version

          # Install Edge WebDriver
          EDGE_VERSION=$(microsoft-edge --version | grep -oP '\d+\.\d+\.\d+')
          EDGE_DRIVER_URL="https://msedgedriver.azureedge.net/ 131.0.2903.112/edgedriver_linux64.zip"

          # Attempt to download the matching driver, fallback to known version if fails
          wget $EDGE_DRIVER_URL -O edgedriver_linux64.zip || (
            echo "Driver version $EDGE_VERSION not found. Falling back to version 130.x.x.x...";
            wget https://msedgedriver.azureedge.net/ 131.0.2903.112/edgedriver_linux64.zip -O edgedriver_linux64.zip
          )

          unzip edgedriver_linux64.zip -d /usr/local/bin/
          mv /usr/local/bin/msedgedriver /usr/local/bin/edgedriver
          edgedriver --version


      # Step 4: Cache Maven dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 5: Build and Run the Selenium Tests in Headless Mode
      - name: Build and Run Tests in Headless Mode
        run: |
          mvn clean install
          mvn test -Dselenium.headless=true

